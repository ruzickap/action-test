name: windows-2012

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - .github/workflows/windows-2012.yml
      - ansible/roles/ansible-role-virtio-win/**
      - ansible/win-simple.yml
      - build.sh
      - http/windows-2012/**
      - scripts/win-common/**
      - Vagrantfile-windows.template
      - win_iso.sha256
      - windows.json
  push:
    branches:
      - master
    paths:
      - .github/workflows/windows-2012.yml
      - ansible/roles/ansible-role-virtio-win/**
      - ansible/win-simple.yml
      - build.sh
      - http/windows-2012/**
      - scripts/win-common/**
      - Vagrantfile-windows.template
      - win_iso.sha256
      - windows.json

env:
  # https://github.com/ansible/ansible/issues/32499
  OBJC_DISABLE_INITIALIZE_FORK_SAFETY: YES
  VAGRANT_CLOUD_USER: peru

jobs:
  windows-2012:
    name: "*"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        stage:
          - windows-server-2012_r2-standard-x64-eval-virtualbox
    steps:
      - name: Check if image is not already built
        run: |
          BUILD="${{ matrix.stage }}"
          PACKER_VAGRANT_PROVIDER="${BUILD##*-}"
          NAME="${BUILD%-*}"

          # Check if the boxes (virtualbox/libvirt) with the same git sha already exists
          CURRENT_VERSION_DESCRIPTION_MARKDOWN="$(curl -L --silent "https://app.vagrantup.com/api/v1/box/${VAGRANT_CLOUD_USER}/${NAME}" | jq '.current_version.version as $current_version | .versions[] | select (.version == $current_version) .description_markdown')"
          if echo "${CURRENT_VERSION_DESCRIPTION_MARKDOWN}" | grep -q "${GITHUB_SHA}"; then
            # Skip build if the box already exists
            CURRENT_VERSION_PROVIDER_URL="$(curl -L --silent "https://app.vagrantup.com/api/v1/box/${VAGRANT_CLOUD_USER}/${NAME}" | jq -r ".current_version.version as \$current_version | .versions[] | select (.version == \$current_version) .providers[] | select (.name == \"${PACKER_VAGRANT_PROVIDER}\") .download_url")"
            if [ -n "${CURRENT_VERSION_PROVIDER_URL}" ]; then
              echo "*** ${BUILD} with git sha \"${GITHUB_SHA}\" exists on Vagrant Cloud"
              echo "::set-env name=skip::true"
            fi
          fi

      - uses: actions/checkout@v2
        if: env.skip != 'true'
        with:
          submodules: true

      - name: Install packages
        if: env.skip != 'true'
        run: |
          brew install ansible coreutils gnu-sed packer
          pip3 install pywinrm

      - name: Build image - ${{ matrix.stage }}
        if: env.skip != 'true'
        run: |
          export PATH=/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/coreutils/libexec/gnubin:${PATH}
          ./build.sh ${{ matrix.stage }}

      - name: Check the created box image - ${{ matrix.stage }}
        if: env.skip != 'true' && contains( matrix.stage, 'virtualbox' )
        run: |
          export PATH=/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/coreutils/libexec/gnubin:${PATH}
          ./vagrant_init_destroy_boxes.sh /var/tmp/packer-templates-images/${{ matrix.stage }}.box
